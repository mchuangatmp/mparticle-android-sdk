name: "Release SDK"

on:
  workflow_dispatch:
    inputs:
      dryRun:
        description: 'Do a dry run to preview instead of a real release [true/false]'
        required: true
        default: 'true'

jobs:
  instrumented-tests:
    timeout-minutes: 30
    runs-on: macos-latest
    steps:
      - name: "Checkout Branch"
        uses: actions/checkout@v2
      - name: "Run Instrumented Tests"
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew :android-core:cAT :android-kit-base:cAT --stacktrace
      - name: "Archive Instrumented Test Results"
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: test-results
          path: android-core/build/reports/androidTests/connected/**
  unit-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Branch"
        uses: actions/checkout@v2
      - name: Install JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Run Unit Tests
        run: ./gradlew test
      - name: Android Test Report
        uses: asadmansr/android-test-report-action@v1.2.0
        if: ${{ always() }}
  semantic-release:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Branch"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: mchuangatmp/mparticle-android-sdk-internal
          token: ${{ secrets.ANDROID_SDK_PAT }}
          ref: development
          submodules: recursive
      - name: "Build Android Core"
        run: ./gradlew -Ptarget_maven_repo=test -PisRelease=true cleanBuildCache clean testRelease uploadArchives
      - name: "Update Kit references"
        run: git submodule foreach "git fetch; git reset --hard origin/master";
      - name: "Test Kits"
        run: ./gradlew -Ptarget_maven_repo=test -PisRelease=true cleanBuildCache clean testRelease uploadArchives -c settings-kits.gradle
      - name: "Commit Kit Updates"
        run: git add .; git commit -m "Update Submodules"
      - name: "Semantic Release --dry-run"
        if: ${{ github.event.inputs.dryRun == 'true'}}
        env:
          GITHUB_TOKEN: ${{ secrets.ANDROID_SDK_PAT }}
          GIT_AUTHOR_NAME: mparticle-bot
          GIT_AUTHOR_EMAIL: developers@mparticle.com
          GIT_COMMITTER_NAME: mparticle-bot
          GIT_COMMITTER_EMAIL: developers@mparticle.com
        run: |
          npx \
          -p lodash \
          -p semantic-release@17 \
          -p @semantic-release/changelog@5 \
          -p @semantic-release/git@9 \
          -p @semantic-release/exec@5 \
          semantic-release --dry-run
      - name: "Semantic Release"
        if: ${{ github.event.inputs.dryRun == 'false'}}
        env:
          GITHUB_TOKEN: ${{ secrets.ANDROID_SDK_PAT }}
          GIT_AUTHOR_NAME: mparticle-bot
          GIT_AUTHOR_EMAIL: developers@mparticle.com
          GIT_COMMITTER_NAME: mparticle-bot
          GIT_COMMITTER_EMAIL: developers@mparticle.com
        run: |
          npx \
          -p lodash \
          -p semantic-release@17 \
          -p @semantic-release/changelog@5 \
          -p @semantic-release/git@9 \
          -p @semantic-release/exec@5 \
          semantic-release
#        - name: Merge release commits to internal master and internal development
#          run: |
#              git push origin HEAD:master

